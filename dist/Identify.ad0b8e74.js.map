{"version":3,"sources":["../src/events/Event.js","src/ObjectEventType.js","src/Disposable.js","src/array.js","src/functions.js","src/obj.js","../src/events/Target.js","../src/events/EventType.js","src/events.js","src/Observable.js","src/util.js","src/Object.js","src/MapEventType.js","src/OverlayPositioning.js","src/css.js","../src/extent/Corner.js","../src/extent/Relationship.js","src/AssertionError.js","src/asserts.js","src/extent.js","src/has.js","src/dom.js","src/Overlay.js","src/TileState.js","src/easing.js","src/Tile.js","src/ImageBase.js","src/ImageState.js","src/Image.js","src/ImageTile.js","../src/reproj/common.js","../src/proj/Units.js","../src/proj/Projection.js","src/math.js","../src/proj/epsg3857.js","../src/proj/epsg4326.js","../src/proj/projections.js","../src/proj/transforms.js","../src/geom/GeometryType.js","src/sphere.js","src/string.js","src/coordinate.js","src/proj.js","../src/reproj/Triangulation.js","../src/source/common.js","src/reproj.js","../src/reproj/Tile.js","../src/structs/LRUCache.js","src/tilecoord.js","src/TileCache.js","../src/source/TileEventType.js","../src/source/State.js","../src/source/Source.js","src/TileRange.js","../src/tilegrid/common.js","src/size.js","../src/tilegrid/TileGrid.js","src/tilegrid.js","../src/source/Tile.js","src/tileurlfunction.js","../src/source/UrlTile.js","../src/source/TileImage.js","../src/source/XYZ.js","Scripts/customFunctions.js","Scripts/Identify.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["map","$","data","mapLayers","getLayers","getLayerByName","layername","layer","forEach","lyr","get","container","document","getElementById","content","closer","overlay","Overlay","element","autoPan","autoPanAnimation","duration","onclick","setPosition","undefined","blur","key","attributions","addOverlay","on","evt","coordinate","hdms","parcelsLayer","parcelsSource","getSource","view","getView","resolution","getResolution","projection","getProjection","parcelUrl","getFeatureInfoUrl","ajax","url","method","success","result","parcel","parcelNumber","parcel_n","blocknumber","block_n","parcelArea","shape_area","innerHTML","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","createErrorOverlay","body","appendChild","createElement","stackTrace","innerText","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"Identify.ad0b8e74.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(\n      getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.MAP),\n      this.handleMapChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITION),\n      this.handlePositionChanged\n    );\n    this.addEventListener(\n      getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged\n    );\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(\n      Property.MAP\n    ));\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      Property.POSITION\n    ));\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(\n      Property.POSITIONING\n    ));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visisble in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions=} opt_panIntoViewOptions Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map\n          .getView()\n          .getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   * @param {object=} opt_contextOptions Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options=} opt_options XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","const map=$('#map').data('map');\r\nconst mapLayers=map.getLayers();\r\n\r\nexport function getLayerByName(layername){\r\n    let layer =null;\r\n\r\n    mapLayers.forEach(lyr => {\r\n        if(lyr.get('name')===layername)\r\n        layer=lyr;        \r\n    });\r\n    return layer;\r\n}","import 'ol/ol.css';\r\nimport Overlay from 'ol/Overlay';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport {toLonLat} from 'ol/proj';\r\nimport {toStringHDMS} from 'ol/coordinate';\r\nimport {getLayerByName} from './customFunctions';\r\n\r\n/**\r\n * Elements that make up the popup.\r\n */\r\nvar container = document.getElementById('popup');\r\nvar content = document.getElementById('popup-content');\r\nvar closer = document.getElementById('popup-closer');\r\n\r\n/**\r\n * Create an overlay to anchor the popup to the map.\r\n */\r\nvar overlay = new Overlay({\r\n  element: container,\r\n  autoPan: true,\r\n  autoPanAnimation: {\r\n    duration: 250,\r\n  },\r\n});\r\n\r\n/**\r\n * Add a click handler to hide the popup.\r\n * @return {boolean} Don't follow the href.\r\n */\r\n\r\nconst map=$('#map').data('map');\r\ncloser.onclick = function () {\r\n  overlay.setPosition(undefined);\r\n  closer.blur();\r\n  return false;\r\n};\r\n\r\nvar key = 'Get your own API key at https://www.maptiler.com/cloud/';\r\nvar attributions =\r\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\r\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\r\nmap.addOverlay(overlay);\r\n\r\n/**\r\n * Add a click handler to the map to render the popup.\r\n */\r\nmap.on('singleclick', function (evt) {\r\n  var coordinate = evt.coordinate;\r\n  var hdms = toStringHDMS(toLonLat(coordinate));\r\n\r\n  // Getting the layer source: getting the layer itself, and then getting its source\r\n  // Create a function to get the layer by name\r\n\r\n  const parcelsLayer=getLayerByName('Parcels');\r\n  const parcelsSource=parcelsLayer.getSource();\r\n  const view=map.getView();\r\n  const resolution=view.getResolution();\r\n  const projection=view.getProjection();\r\n\r\n  const parcelUrl=parcelsSource.getFeatureInfoUrl(coordinate,resolution,projection,\r\n     {'INFO_FORMAT':'application/json'});\r\n\r\n     if(parcelUrl)\r\n     {\r\n         $.ajax({\r\n             url:parcelUrl,\r\n             method:'Get',\r\n             success:function(result){\r\n                 const parcel=result[0];\r\n                 const parcelNumber=parcel.parcel_n;\r\n                 const blocknumber=parcel.block_n;\r\n                 const parcelArea=parcel.shape_area;\r\n             }\r\n         })\r\n     }\r\n  content.innerHTML = '<p>You clicked here:</p><code>' + hdms + '</code>';\r\n  overlay.setPosition(coordinate);\r\n});\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}